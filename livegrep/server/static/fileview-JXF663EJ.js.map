{
  "version": 3,
  "sources": ["../web/fileview.ts"],
  "sourcesContent": ["/**\n * Copyright 2011-2013 Nelson Elhage\n * SPDX-License-Identifier: BSD-2-Clause\n */\n\nimport jQuery from \"jquery\";\nimport \"./codesearch.css\";\nimport \"./fileview.css\";\nimport * as api from \"./api.ts\";\n\nfunction getSelectedText() {\n    return window.getSelection()?.toString() || \"\";\n}\n\nfunction scrollToRange(range: { start: number; end: number; }, elementContainer: JQuery) {\n    // - If we have a single line, scroll the viewport so that the element is\n    // at 1/3 of the viewport.\n    // - If we have a range, try and center the range in the viewport\n    // - If the range is to high to fit in the viewport, fallback to the single\n    //   element scenario for the first line\n    let viewport = jQuery(window);\n    let viewportHeight = viewport.height() || 0;\n\n    let scrollOffset = Math.floor(viewportHeight / 3.0);\n\n    let firstLineElement = elementContainer.find(\"#L\" + range.start);\n    if (!firstLineElement.length) {\n        // We were given a scroll offset to a line number that doesn't exist in the page, bail\n        return;\n    }\n    if (range.start != range.end) {\n        // We have a range, try and center the entire range.\n        // If it's too high for the viewport, fallback to revealing the first element.\n        let lastLineElement = elementContainer.find(\"#L\" + range.end);\n        let rangeHeight =\n            lastLineElement.offset().top + lastLineElement.height() - firstLineElement.offset().top;\n        if (rangeHeight <= viewportHeight) {\n            // Range fits in viewport, center it\n            scrollOffset = 0.5 * (viewportHeight - rangeHeight);\n        } else {\n            scrollOffset = firstLineElement.height() / 2; // Stick to (almost) the top of the viewport\n        }\n    }\n\n    viewport.scrollTop(firstLineElement.offset().top - scrollOffset);\n}\n\nfunction setHash(hash: string) {\n    if (history.replaceState) {\n        history.replaceState(null, \"\", hash);\n    } else {\n        location.hash = hash;\n    }\n}\n\nfunction parseHashForLineRange(hashString: string) {\n    let parseMatch = hashString.match(/#L(\\d+)(?:-L?(\\d+))?/);\n\n    if (parseMatch && parseMatch.length === 3) {\n        // We have a match on the regex expression\n        let startLine = parseInt(parseMatch[1], 10);\n        let endLine = parseInt(parseMatch[2], 10);\n        if (isNaN(endLine) || endLine < startLine) {\n            endLine = startLine;\n        }\n        return {\n            start: startLine,\n            end: endLine,\n        };\n    }\n\n    return null;\n}\n\nfunction addHighlightClassesForRange(range: { start: number; end: number; }, root: JQuery) {\n    let idSelectors: string[] = [];\n    for (let lineNumber = range.start; lineNumber <= range.end; lineNumber++) {\n        idSelectors.push(\"#L\" + lineNumber);\n    }\n    root.find(idSelectors.join(\",\")).addClass(\"highlighted\");\n}\n\nfunction expandRangeToElement(element: JQuery) {\n    let range = parseHashForLineRange(document.location.hash);\n    if (range) {\n        let elementLine = parseInt(element.attr(\"id\").replace(\"L\", \"\"), 10);\n        if (elementLine < range.start) {\n            range.end = range.start;\n            range.start = elementLine;\n        } else {\n            range.end = elementLine;\n        }\n        setHash(\"#L\" + range.start + \"-\" + range.end);\n    }\n}\n\nfunction init(initData: FileViewData) {\n    let root = jQuery(\".file-content\");\n    let lineNumberContainer = root.find(\".line-numbers\");\n    let helpScreen = jQuery(\".help-screen\");\n\n    function doSearch(query: string, newTab = false) {\n        let url = \"/search\" + (query\n            ? \"?q=\" + encodeURIComponent(query) + \"&repo=\" + encodeURIComponent(initData.repo_name)\n            : \"\");\n\n        if (newTab)\n            window.open(url);\n        else\n            window.location.href = url;\n\n    }\n\n    function showHelp() {\n        helpScreen\n            .removeClass(\"hidden\")\n            .children()\n            .on(\"click\", function (event) {\n                // Prevent clicks inside the element to reach the document\n                event.stopImmediatePropagation();\n                return true;\n            });\n\n        jQuery(document).on(\"click\", hideHelp);\n    }\n\n    function hideHelp() {\n        helpScreen.addClass(\"hidden\").children().off(\"click\");\n        jQuery(document).off(\"click\", hideHelp);\n        return true;\n    }\n\n    function handleHashChange(scrollElementIntoView = true) {\n        // Clear current highlights\n        lineNumberContainer.find(\".highlighted\").removeClass(\"highlighted\");\n\n        // Highlight the current range from the hash, if any\n        let range = parseHashForLineRange(document.location.hash);\n        if (range) {\n            addHighlightClassesForRange(range, lineNumberContainer);\n            if (scrollElementIntoView) {\n                scrollToRange(range, root);\n            }\n        }\n\n        // Update the external-browse link\n        jQuery(\"#external-link\").attr(\"href\", getExternalLink(range));\n    }\n\n    function getLineNumber(range: { start: number; end: number; } | null) {\n        if (range == null) {\n            // Default to first line if no lines are selected.\n            return \"1\";\n        } else if (range.start == range.end) {\n            return range.start;\n        } else {\n            // We blindly assume that the external viewer supports linking to a\n            // range of lines. Github doesn't support this, but highlights the\n            // first line given, which is close enough.\n            return range.start + \"-\" + range.end;\n        }\n    }\n\n    function getExternalLink(range: { start: number; end: number; } | null) {\n        let lno = getLineNumber(range);\n\n        let repoName = initData.repo_name;\n        let filePath = initData.file_path;\n        let url = initData.url_pattern;\n\n        // If url not found, warn user and fail gracefully\n        if (!url) {\n            // deal with both undefined and empty string\n            console.error(\n                \"The index file you provided does not provide repositories[x].metadata.url_pattern. External links to file sources will not work. See the README for more information on file viewing.\",\n            );\n            return;\n        }\n\n        // If {path} already has a slash in front of it, trim extra leading\n        // slashes from `pathInRepo` to avoid a double-slash in the URL.\n        if (url.indexOf(\"/{path}\") !== -1) {\n            filePath = filePath.replace(/^\\/+/, \"\");\n        }\n\n        // XXX code copied\n        url = url.replace(\"{lno}\", lno.toString());\n        url = url.replace(\"{version}\", initData.commit);\n        url = url.replace(\"{name}\", repoName);\n        url = url.replace(\"{path}\", filePath);\n        return url;\n    }\n\n    function processKeyEvent(key: string) {\n        switch (key) {\n            case \"Enter\": {\n                // Perform a new search with the selected text, if any\n                let selectedText = getSelectedText();\n                if (selectedText) {\n                    doSearch(selectedText, true);\n                }\n                return true;\n            }\n            case \"/\": {\n                hideHelp();\n                doSearch(getSelectedText());\n                return true;\n            }\n            case \"?\": {\n                showHelp();\n                return true;\n            }\n            case \"Escape\": {\n                // Avoid swallowing the important escape key event unless we're sure we want to\n                if (helpScreen.hasClass(\"hidden\")) {\n                    return false;\n                }\n                hideHelp();\n                jQuery(\"#query\").trigger(\"blur\");\n                return true;\n            }\n            case \"v\": {\n                // Visually highlight the external link to indicate what happened\n                let link = jQuery(\"#external-link\");\n                link.trigger(\"focus\");\n                window.location.href = link.attr(\"href\") as string;\n                return true;\n            }\n            case \"n\":\n            case \"p\": {\n                let selectedText = getSelectedText();\n                if (selectedText) {\n                    window.find(selectedText, /*case-sensitive:*/false, /*previous:*/key == \"p\");\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function initializeActionButtons(root: JQuery) {\n        // Map out action name to function call, and automate the details of actually hooking up the event handling.\n        let ACTION_MAP = {\n            search: doSearch,\n            help: showHelp,\n        };\n\n        for (let actionName in ACTION_MAP) {\n            root.on(\n                \"click auxclick\",\n                '[data-action-name=\"' + actionName + '\"]',\n                // We can't use the action mapped handler directly here since the iterator (`actioName`)\n                // will keep changing in the closure of the inline function.\n                // Generating a click handler on the fly removes the dependency on closure which\n                // makes this work as one would expect. #justjsthings.\n                (function (handler) {\n                    return function (event) {\n                        event.preventDefault();\n                        event.stopImmediatePropagation(); // Prevent immediately closing modals etc.\n                        handler();\n                    };\n                })(ACTION_MAP[actionName]),\n            );\n        }\n    }\n\n    let showSelectionReminder = function () {\n        jQuery(\".without-selection\").hide();\n        jQuery(\".with-selection\").show();\n    };\n\n    let hideSelectionReminder = function () {\n        jQuery(\".without-selection\").show();\n        jQuery(\".with-selection\").hide();\n    };\n\n    function initializePage() {\n        // Initial range detection for when the page is loaded\n        handleHashChange();\n\n        // Allow shift clicking links to expand the highlight range\n        lineNumberContainer.on(\"click\", \"a\", function (event) {\n            event.preventDefault();\n            if (event.shiftKey) {\n                expandRangeToElement(jQuery(event.target));\n            } else {\n                setHash(jQuery(event.target).attr(\"href\"));\n            }\n            handleHashChange(false);\n        });\n\n        jQuery(window).on(\"hashchange\", function (event) {\n            event.preventDefault();\n            // The url was updated with a new range\n            handleHashChange();\n        });\n\n        jQuery(document).on(\"keydown\", event => {\n            // Filter out key events when the user has focused an input field.\n            if (jQuery(event.target).is(\"input,textarea\")) return;\n            // Filter out key if a modifier is pressed.\n            if (event.altKey || event.ctrlKey || event.metaKey) return;\n            if (processKeyEvent(event.key)) event.preventDefault();\n        });\n\n        jQuery(document).on(\"mouseup\", function () {\n            let selectedText = getSelectedText();\n            if (selectedText) {\n                showSelectionReminder();\n            } else {\n                hideSelectionReminder();\n            }\n        });\n\n        initializeActionButtons(jQuery(\".header .header-actions\"));\n    }\n\n    // The native browser handling of hashes in the location is to scroll\n    // to the element that has a name matching the id. We want to prevent\n    // this since we want to take control over scrolling ourselves, and the\n    // most reliable way to do this is to hide the elements until the page\n    // has loaded. We also need defer our own scroll handling since we can't\n    // access the geometry of the DOM elements until they are visible.\n    setTimeout(function () {\n        lineNumberContainer.css({display: \"block\"});\n        initializePage();\n    }, 1);\n}\n\njQuery(() => {\n    init(JSON.parse((document.getElementById(\"data\") as HTMLScriptElement).text) as api.FileViewData);\n});\n"],
  "mappings": "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",
  "names": ["import_jquery", "getSelectedText", "scrollToRange", "range", "elementContainer", "viewport", "jQuery", "viewportHeight", "scrollOffset", "firstLineElement", "lastLineElement", "rangeHeight", "setHash", "hash", "parseHashForLineRange", "hashString", "parseMatch", "startLine", "endLine", "addHighlightClassesForRange", "root", "idSelectors", "lineNumber", "expandRangeToElement", "element", "elementLine", "init", "initData", "lineNumberContainer", "helpScreen", "doSearch", "query", "newTab", "url", "showHelp", "event", "hideHelp", "handleHashChange", "scrollElementIntoView", "getExternalLink", "getLineNumber", "lno", "repoName", "filePath", "processKeyEvent", "key", "selectedText", "link", "initializeActionButtons", "ACTION_MAP", "actionName", "handler", "showSelectionReminder", "hideSelectionReminder", "initializePage"]
}
